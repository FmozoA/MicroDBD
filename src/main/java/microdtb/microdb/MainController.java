package microdtb.microdb;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/user") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    
    @PostMapping(path = "/add") // Map ONLY POST Requests
    public @ResponseBody Respuesta addNewUser(@RequestParam String name, @RequestParam(required = false) String email,
            @RequestParam String apellido, @RequestParam Integer cedula) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Respuesta respuesta = new Respuesta();
        if (email == null) {
            respuesta.setResultado("Error al agregar el usuario");
            respuesta.setError("Email vacio");
            return respuesta;
        } 

        User userNuevo = new User();
        userNuevo.setName(name);
        try {
            userNuevo.setEmail(email);
        } catch (Exception e1) {
            respuesta.setResultado("Error al agregar el usuario");
            respuesta.setError(e1.getMessage());
            return respuesta;
        }
        userNuevo.setApellido(apellido);
        userNuevo.setCedula(cedula);

        try {
            userRepository.save(userNuevo);
            respuesta.setResultado("Usuario salvado");
        } catch (Exception e) {
            respuesta.setResultado("Error al agregar el usuario");
            respuesta.setError(e.getMessage());
        }

        return respuesta;
    }

    @GetMapping(path = "/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    
}
